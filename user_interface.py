# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'user_interface.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1400, 950)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(0, 700))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget_2.setMaximumSize(QtCore.QSize(350, 16777215))
        self.tabWidget_2.setTabPosition(QtWidgets.QTabWidget.West)
        self.tabWidget_2.setTabsClosable(False)
        self.tabWidget_2.setMovable(True)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tab_3)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.groupBox_4 = QtWidgets.QGroupBox(self.tab_3)
        self.groupBox_4.setMinimumSize(QtCore.QSize(0, 0))
        self.groupBox_4.setMaximumSize(QtCore.QSize(1000, 16777215))
        self.groupBox_4.setObjectName("groupBox_4")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.groupBox_4)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.radioButton = QtWidgets.QRadioButton(self.groupBox_4)
        self.radioButton.setChecked(True)
        self.radioButton.setObjectName("radioButton")
        self.verticalLayout_3.addWidget(self.radioButton)
        self.radioButton_2 = QtWidgets.QRadioButton(self.groupBox_4)
        self.radioButton_2.setObjectName("radioButton_2")
        self.verticalLayout_3.addWidget(self.radioButton_2)
        self.groupBox = QtWidgets.QGroupBox(self.groupBox_4)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.addPointFile_b = QtWidgets.QPushButton(self.groupBox)
        self.addPointFile_b.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addPointFile_b.sizePolicy().hasHeightForWidth())
        self.addPointFile_b.setSizePolicy(sizePolicy)
        self.addPointFile_b.setObjectName("addPointFile_b")
        self.verticalLayout_6.addWidget(self.addPointFile_b)
        self.verticalLayout_3.addWidget(self.groupBox)
        self.groupBox_8 = QtWidgets.QGroupBox(self.groupBox_4)
        self.groupBox_8.setEnabled(True)
        self.groupBox_8.setMinimumSize(QtCore.QSize(0, 0))
        self.groupBox_8.setObjectName("groupBox_8")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.groupBox_8)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.loadFilledTable_b = QtWidgets.QPushButton(self.groupBox_8)
        self.loadFilledTable_b.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.loadFilledTable_b.sizePolicy().hasHeightForWidth())
        self.loadFilledTable_b.setSizePolicy(sizePolicy)
        self.loadFilledTable_b.setMinimumSize(QtCore.QSize(0, 1))
        self.loadFilledTable_b.setObjectName("loadFilledTable_b")
        self.verticalLayout_4.addWidget(self.loadFilledTable_b)
        self.verticalLayout_3.addWidget(self.groupBox_8)
        self.verticalLayout_2.addWidget(self.groupBox_4)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.tabWidget_2.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.tab_4)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab_4)
        self.groupBox_2.setEnabled(True)
        self.groupBox_2.setMaximumSize(QtCore.QSize(1000, 16777215))
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.newView_b = QtWidgets.QPushButton(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.newView_b.sizePolicy().hasHeightForWidth())
        self.newView_b.setSizePolicy(sizePolicy)
        self.newView_b.setMaximumSize(QtCore.QSize(150, 100))
        self.newView_b.setObjectName("newView_b")
        self.gridLayout_3.addWidget(self.newView_b, 0, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.groupBox_2)
        self.label_2.setObjectName("label_2")
        self.gridLayout_3.addWidget(self.label_2, 2, 0, 1, 2)
        self.label = QtWidgets.QLabel(self.groupBox_2)
        self.label.setObjectName("label")
        self.gridLayout_3.addWidget(self.label, 7, 0, 1, 2)
        self.slider = QtWidgets.QSlider(self.groupBox_2)
        self.slider.setOrientation(QtCore.Qt.Horizontal)
        self.slider.setObjectName("slider")
        self.gridLayout_3.addWidget(self.slider, 8, 0, 1, 2)
        self.view_lw = QtWidgets.QListWidget(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.view_lw.sizePolicy().hasHeightForWidth())
        self.view_lw.setSizePolicy(sizePolicy)
        self.view_lw.setMaximumSize(QtCore.QSize(500, 16777215))
        self.view_lw.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.view_lw.setObjectName("view_lw")
        self.gridLayout_3.addWidget(self.view_lw, 3, 0, 1, 2)
        self.delete_b = QtWidgets.QPushButton(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.delete_b.sizePolicy().hasHeightForWidth())
        self.delete_b.setSizePolicy(sizePolicy)
        self.delete_b.setMinimumSize(QtCore.QSize(150, 0))
        self.delete_b.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.delete_b.setObjectName("delete_b")
        self.gridLayout_3.addWidget(self.delete_b, 0, 1, 1, 1)
        self.link_b = QtWidgets.QPushButton(self.groupBox_2)
        self.link_b.setObjectName("link_b")
        self.gridLayout_3.addWidget(self.link_b, 1, 0, 1, 1)
        self.verticalLayout_7.addWidget(self.groupBox_2)
        self.groupBox_6 = QtWidgets.QGroupBox(self.tab_4)
        self.groupBox_6.setEnabled(True)
        self.groupBox_6.setMaximumSize(QtCore.QSize(1000, 16777215))
        self.groupBox_6.setObjectName("groupBox_6")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_6)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_13 = QtWidgets.QLabel(self.groupBox_6)
        self.label_13.setObjectName("label_13")
        self.gridLayout_2.addWidget(self.label_13, 4, 1, 1, 1)
        self.binary_rb = QtWidgets.QRadioButton(self.groupBox_6)
        self.binary_rb.setObjectName("binary_rb")
        self.gridLayout_2.addWidget(self.binary_rb, 1, 0, 1, 1)
        self.contour_rb = QtWidgets.QRadioButton(self.groupBox_6)
        self.contour_rb.setObjectName("contour_rb")
        self.gridLayout_2.addWidget(self.contour_rb, 2, 0, 1, 1)
        self.binary_sb = QtWidgets.QSpinBox(self.groupBox_6)
        self.binary_sb.setMaximum(255)
        self.binary_sb.setProperty("value", 20)
        self.binary_sb.setObjectName("binary_sb")
        self.gridLayout_2.addWidget(self.binary_sb, 4, 0, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.groupBox_6)
        self.label_11.setObjectName("label_11")
        self.gridLayout_2.addWidget(self.label_11, 3, 0, 1, 1)
        self.original_rb = QtWidgets.QRadioButton(self.groupBox_6)
        self.original_rb.setChecked(True)
        self.original_rb.setObjectName("original_rb")
        self.gridLayout_2.addWidget(self.original_rb, 0, 0, 1, 1)
        self.verticalLayout_7.addWidget(self.groupBox_6)
        self.correct_b = QtWidgets.QPushButton(self.tab_4)
        self.correct_b.setObjectName("correct_b")
        self.verticalLayout_7.addWidget(self.correct_b)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_7.addItem(spacerItem1)
        self.tabWidget_2.addTab(self.tab_4, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.tab_6)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.groupBox_5 = QtWidgets.QGroupBox(self.tab_6)
        self.groupBox_5.setEnabled(True)
        self.groupBox_5.setObjectName("groupBox_5")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.groupBox_5)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.calibrate_b = QtWidgets.QPushButton(self.groupBox_5)
        self.calibrate_b.setObjectName("calibrate_b")
        self.verticalLayout_5.addWidget(self.calibrate_b)
        self.saveCalibration_b = QtWidgets.QPushButton(self.groupBox_5)
        self.saveCalibration_b.setObjectName("saveCalibration_b")
        self.verticalLayout_5.addWidget(self.saveCalibration_b)
        self.verticalLayout_9.addWidget(self.groupBox_5)
        self.groupBox_3 = QtWidgets.QGroupBox(self.tab_6)
        self.groupBox_3.setObjectName("groupBox_3")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox_3)
        self.verticalLayout.setObjectName("verticalLayout")
        self.loadCal_b = QtWidgets.QPushButton(self.groupBox_3)
        self.loadCal_b.setEnabled(True)
        self.loadCal_b.setObjectName("loadCal_b")
        self.verticalLayout.addWidget(self.loadCal_b)
        self.loadTest_b = QtWidgets.QPushButton(self.groupBox_3)
        self.loadTest_b.setObjectName("loadTest_b")
        self.verticalLayout.addWidget(self.loadTest_b)
        self.testCal_b = QtWidgets.QPushButton(self.groupBox_3)
        self.testCal_b.setObjectName("testCal_b")
        self.verticalLayout.addWidget(self.testCal_b)
        self.verticalLayout_9.addWidget(self.groupBox_3)
        self.groupBox_7 = QtWidgets.QGroupBox(self.tab_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox_7.sizePolicy().hasHeightForWidth())
        self.groupBox_7.setSizePolicy(sizePolicy)
        self.groupBox_7.setObjectName("groupBox_7")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.groupBox_7)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.frame = QtWidgets.QFrame(self.groupBox_7)
        self.frame.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame.setObjectName("frame")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.xmean_l = QtWidgets.QLabel(self.frame)
        self.xmean_l.setObjectName("xmean_l")
        self.gridLayout_4.addWidget(self.xmean_l, 3, 1, 1, 1)
        self.label_20 = QtWidgets.QLabel(self.frame)
        self.label_20.setText("")
        self.label_20.setObjectName("label_20")
        self.gridLayout_4.addWidget(self.label_20, 2, 0, 1, 1)
        self.ymean_l = QtWidgets.QLabel(self.frame)
        self.ymean_l.setObjectName("ymean_l")
        self.gridLayout_4.addWidget(self.ymean_l, 4, 1, 1, 1)
        self.zmean_l = QtWidgets.QLabel(self.frame)
        self.zmean_l.setObjectName("zmean_l")
        self.gridLayout_4.addWidget(self.zmean_l, 5, 1, 1, 1)
        self.xstd_l = QtWidgets.QLabel(self.frame)
        self.xstd_l.setObjectName("xstd_l")
        self.gridLayout_4.addWidget(self.xstd_l, 3, 2, 1, 1)
        self.ystd_l = QtWidgets.QLabel(self.frame)
        self.ystd_l.setObjectName("ystd_l")
        self.gridLayout_4.addWidget(self.ystd_l, 4, 2, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.frame)
        self.label_4.setObjectName("label_4")
        self.gridLayout_4.addWidget(self.label_4, 4, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.frame)
        self.label_8.setObjectName("label_8")
        self.gridLayout_4.addWidget(self.label_8, 2, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.frame)
        self.label_7.setObjectName("label_7")
        self.gridLayout_4.addWidget(self.label_7, 2, 2, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.frame)
        self.label_5.setObjectName("label_5")
        self.gridLayout_4.addWidget(self.label_5, 5, 0, 1, 1)
        self.zstd_l = QtWidgets.QLabel(self.frame)
        self.zstd_l.setObjectName("zstd_l")
        self.gridLayout_4.addWidget(self.zstd_l, 5, 2, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.frame)
        self.label_3.setObjectName("label_3")
        self.gridLayout_4.addWidget(self.label_3, 3, 0, 1, 1)
        self.pointsTested_l = QtWidgets.QLabel(self.frame)
        self.pointsTested_l.setObjectName("pointsTested_l")
        self.gridLayout_4.addWidget(self.pointsTested_l, 0, 2, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.frame)
        self.label_6.setObjectName("label_6")
        self.gridLayout_4.addWidget(self.label_6, 0, 0, 1, 2)
        self.line = QtWidgets.QFrame(self.frame)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_4.addWidget(self.line, 1, 0, 1, 3)
        self.gridLayout_5.addWidget(self.frame, 2, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_5.addItem(spacerItem2, 4, 0, 1, 1)
        self.saveTest_b = QtWidgets.QPushButton(self.groupBox_7)
        self.saveTest_b.setObjectName("saveTest_b")
        self.gridLayout_5.addWidget(self.saveTest_b, 3, 0, 1, 1)
        self.verticalLayout_9.addWidget(self.groupBox_7)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_9.addItem(spacerItem3)
        self.tabWidget_2.addTab(self.tab_6, "")
        self.gridLayout.addWidget(self.tabWidget_2, 0, 0, 2, 1)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setObjectName("tabWidget")
        self.image = QtWidgets.QWidget()
        self.image.setObjectName("image")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.image)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.View = QtWidgets.QGraphicsView(self.image)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.View.sizePolicy().hasHeightForWidth())
        self.View.setSizePolicy(sizePolicy)
        self.View.setMinimumSize(QtCore.QSize(0, 0))
        self.View.setMaximumSize(QtCore.QSize(1920, 1080))
        self.View.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.View.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.View.setObjectName("View")
        self.verticalLayout_10.addWidget(self.View)
        self.tabWidget.addTab(self.image, "")
        self.table = QtWidgets.QWidget()
        self.table.setObjectName("table")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.table)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.pointFile_l = QtWidgets.QLabel(self.table)
        self.pointFile_l.setObjectName("pointFile_l")
        self.gridLayout_6.addWidget(self.pointFile_l, 1, 2, 1, 1)
        self.saveTable_b = QtWidgets.QPushButton(self.table)
        self.saveTable_b.setEnabled(True)
        self.saveTable_b.setObjectName("saveTable_b")
        self.gridLayout_6.addWidget(self.saveTable_b, 1, 0, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.table)
        self.label_10.setMaximumSize(QtCore.QSize(120, 16777215))
        self.label_10.setObjectName("label_10")
        self.gridLayout_6.addWidget(self.label_10, 1, 1, 1, 1)
        self.tableWidget = QtWidgets.QTableView(self.table)
        self.tableWidget.setObjectName("tableWidget")
        self.gridLayout_6.addWidget(self.tableWidget, 0, 0, 1, 3)
        self.tabWidget.addTab(self.table, "")
        self.test = QtWidgets.QWidget()
        self.test.setObjectName("test")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.test)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.test_tableView = QtWidgets.QTableView(self.test)
        self.test_tableView.setObjectName("test_tableView")
        self.horizontalLayout.addWidget(self.test_tableView)
        self.tabWidget.addTab(self.test, "")
        self.gridLayout.addWidget(self.tabWidget, 0, 3, 2, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget_2.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        self.radioButton.toggled['bool'].connect(self.groupBox.setVisible)
        self.radioButton_2.toggled['bool'].connect(self.groupBox_8.setVisible)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Calibration table options:"))
        self.radioButton.setText(_translate("MainWindow", "Populate a new calibration table"))
        self.radioButton_2.setText(_translate("MainWindow", "Work with a previously populate calibration table"))
        self.groupBox.setTitle(_translate("MainWindow", "New calibration table:"))
        self.addPointFile_b.setToolTip(_translate("MainWindow", "<html><head/><body><p>Load a .csv file containing the x y and z data (in seperate columns). Each row in the file corresponds to a real-world position of a calibration marker visible in each view. The first row is therefore for the calibration marker 1, the second row for the calibration marker 2, etc...</p></body></html>"))
        self.addPointFile_b.setText(_translate("MainWindow", "Import point file"))
        self.groupBox_8.setTitle(_translate("MainWindow", "Import populated calibration table:"))
        self.loadFilledTable_b.setToolTip(_translate("MainWindow", "<html><head/><body><p>Load data saved from a previously populated table. </p></body></html>"))
        self.loadFilledTable_b.setText(_translate("MainWindow", "Load populated calibration table"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_3), _translate("MainWindow", "Step 1: Calibration table"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Add views and identify markers on views:"))
        self.newView_b.setStatusTip(_translate("MainWindow", "Add a new calibration view."))
        self.newView_b.setText(_translate("MainWindow", "Add a view"))
        self.label_2.setText(_translate("MainWindow", "Select view to place markers on:"))
        self.label.setText(_translate("MainWindow", "Zoom in on active view:"))
        self.slider.setStatusTip(_translate("MainWindow", "Slide to zoom in and out on view."))
        self.view_lw.setStatusTip(_translate("MainWindow", "Select a view to work with."))
        self.delete_b.setStatusTip(_translate("MainWindow", "Delete the currently selected view."))
        self.delete_b.setText(_translate("MainWindow", "Delete view"))
        self.link_b.setText(_translate("MainWindow", "Link image to view"))
        self.groupBox_6.setTitle(_translate("MainWindow", "Improve centroid detection:"))
        self.label_13.setText(_translate("MainWindow", "intensity threshold"))
        self.binary_rb.setText(_translate("MainWindow", "Show binary"))
        self.contour_rb.setText(_translate("MainWindow", "Show contours"))
        self.label_11.setText(_translate("MainWindow", "Threshold adjust:"))
        self.original_rb.setText(_translate("MainWindow", "Show original"))
        self.correct_b.setToolTip(_translate("MainWindow", "<html><head/><body><p>Aligns the centers of the manually placed points to the centroids of the detected calibration markers (red dot in the _ctrs image). This is done using a computer vision algorithm. Dots that have correctly \'snapped\' to the centroid of the calirbation marker will change color from red to green. If a dot remains red, it is <span style=\" font-weight:600; font-style:italic;\">very </span>likely because the contrast between the calibration marker and its immediate surroundings is not strong enough. To remedy this problem, additional pre-processing of the image is required in a program such as Gimp to improve the contrast and hence the detectability of the point. If a green dot looks \'off\' of center, it is also likely due to poor contrast casuing an incorrect detection of the center of the calibration marker. </p></body></html>"))
        self.correct_b.setText(_translate("MainWindow", "Snap markers to contour centroids"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4), _translate("MainWindow", "Step 2: Views and markers"))
        self.groupBox_5.setTitle(_translate("MainWindow", "Step 4: Perform 3D calibration"))
        self.calibrate_b.setToolTip(_translate("MainWindow", "<html><head/><body><p>Performs the 3D calibration. A fully populated table containing a minimum of 2 views each containing a minimum of 8 points is required.</p></body></html>"))
        self.calibrate_b.setText(_translate("MainWindow", "Calibrate 3D"))
        self.saveCalibration_b.setText(_translate("MainWindow", "Save calibration"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Test calibration:"))
        self.loadCal_b.setToolTip(_translate("MainWindow", "<html><head/><body><p>Load in an older calibration file. If no file is selected, the last calibration performed will be used when \'Test 3D calibration\' is clicked. </p></body></html>"))
        self.loadCal_b.setText(_translate("MainWindow", "Load calibration"))
        self.loadTest_b.setToolTip(_translate("MainWindow", "<html><head/><body><p>Load in an *.csv file including the real-world coordinates of any number of detectable objects appearing in each of the views used to perform the 3D calibration. The format of this file is identical to the file format used when the \'Table view\' data is saved to file (i.e. each row contains x,y,z followed by the x and y pixel coordinates for each view).  </p></body></html>"))
        self.loadTest_b.setText(_translate("MainWindow", "Load test points"))
        self.testCal_b.setText(_translate("MainWindow", "Test 3D calibration"))
        self.groupBox_7.setTitle(_translate("MainWindow", "Test statistics:"))
        self.xmean_l.setToolTip(_translate("MainWindow", "<html><head/><body><p>Error in units used to specify the object-space coordinates in the test point file. </p></body></html>"))
        self.xmean_l.setText(_translate("MainWindow", "0"))
        self.ymean_l.setToolTip(_translate("MainWindow", "<html><head/><body><p>Error in units used to specify the object-space coordinates in the test point file. </p></body></html>"))
        self.ymean_l.setText(_translate("MainWindow", "0"))
        self.zmean_l.setToolTip(_translate("MainWindow", "<html><head/><body><p>Error in units used to specify the object-space coordinates in the test point file. </p></body></html>"))
        self.zmean_l.setText(_translate("MainWindow", "0"))
        self.xstd_l.setText(_translate("MainWindow", "0"))
        self.ystd_l.setText(_translate("MainWindow", "0"))
        self.label_4.setText(_translate("MainWindow", "y"))
        self.label_8.setText(_translate("MainWindow", "mean error:"))
        self.label_7.setText(_translate("MainWindow", "std. error:"))
        self.label_5.setText(_translate("MainWindow", "z"))
        self.zstd_l.setText(_translate("MainWindow", "0"))
        self.label_3.setText(_translate("MainWindow", "x"))
        self.pointsTested_l.setText(_translate("MainWindow", "0"))
        self.label_6.setText(_translate("MainWindow", "number of points tested:"))
        self.saveTest_b.setText(_translate("MainWindow", "Save test results"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_6), _translate("MainWindow", "Step 3: Perform calibration"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.image), _translate("MainWindow", "Image view"))
        self.pointFile_l.setText(_translate("MainWindow", "TextLabel"))
        self.saveTable_b.setToolTip(_translate("MainWindow", "Saves the table\'s data to file for later use."))
        self.saveTable_b.setText(_translate("MainWindow", "Save table to file"))
        self.label_10.setText(_translate("MainWindow", "Loaded point file:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.table), _translate("MainWindow", "Table view"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.test), _translate("MainWindow", "Test 3D calibration"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

